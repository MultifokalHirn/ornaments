---
name: Python Checks

on:
  workflow_dispatch:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]
    paths-ignore:
      - "docs/**"
      - "**/*.rst"
      - "**/*.md"
      - .gitignore
      - LICENSE
      - CHANGELOG.md
      - CONTRIBUTING.md

permissions:
  contents: read

jobs:
  build:
    # name: Build and Test
    runs-on: ubuntu-latest
    strategy:
      # max-parallel: 1
      fail-fast: false
      matrix:
        python-version: [3.11, 3.12]

    steps:
      - uses: actions/checkout@v4
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      - name: Set Variables
        id: set_variables
        shell: bash
        run: |
          echo "PY=$(python -c 'import hashlib, sys;print(hashlib.sha256(sys.version.encode()+sys.executable.encode()).hexdigest())')" >> $GITHUB_OUTPUT
          echo "PIP_CACHE=$(pip cache dir)" >> $GITHUB_OUTPUT
      - name: Cache PIP
        uses: actions/cache@v4
        with:
          path: ${{ steps.set_variables.outputs.PIP_CACHE }}
          key: ${{ runner.os }}-pip-${{ steps.set_variables.outputs.PY }}
      - name: Cache venv
        uses: actions/cache@v4
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ matrix.python-version }}-${{ hashFiles('pdm.lock') }}
          restore-keys: |
            venv-${{ runner.os }}-${{ matrix.python-version }}-
        id: cache
      - name: Setup virtual environment
        if: steps.cache.outputs.cache-hit != 'true'
        run: make bootstrap

      - name: Install prod and dev dependencies
        run: make prod dev

      - name: Run tests
        run: make test

      - name: Run typechecks
        run: make mypy

      - name: Lint
        run: make lint

      # - name: Install dependencies
      #   run: |
      #     python -m pip install --upgrade tox .
      # - name: Test with tox
      #   run: |
      #     tox --version
      #     pyversion="${{ matrix.python-version }}"
      #     tox -e py${pyversion/./}
